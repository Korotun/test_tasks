array = []
10.times do
  e = rand(-20..19)
  array << e
end
A = array.dup
a = 1
b = 5

puts '1.Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными.'
puts array.inspect

(array.partition { |index| index.even? }).flatten

'--------------'

puts '2. Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными.'
puts array.inspect

(array.partition { |index| index.odd? }).flatten

'--------------'
puts '3. Дан целочисленный массив. Вывести номер первого из тех его элементов, которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ].'
puts array.inspect

A.index { |element| A[0] < element && element < A[-1] } || []

'--------------'
puts '4. Дан целочисленный массив. Вывести номер последнего из тех его элементов, которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ].	'
puts A.inspect

A.rindex { |element| A[0] < element && element < A[-1] } || []

'--------------'

puts '5. Дан целочисленный массив. Преобразовать его, прибавив к четным числам первый элемент. Первый и последний элементы массива не изменять.'
puts A.inspect

A.map { |element| element.even? && (element != A[0] && element != A[-1]) ? element + A.first : element }

'--------------'

puts '6. Дан целочисленный массив. Преобразовать его, прибавив к четным числам последний элемент. Первый и последний элементы массива не изменять.'

A.map { |element| element.even? && (element != A[0] && element != A[-1]) ? element + A.last : element }

'--------------'

puts '7.Дан целочисленный массив. Преобразовать его, прибавив к нечетным числам последний элемент. Первый и последний элементы массива не изменять.	'

A.slice(0, 1) + A.slice(1...-1).map { |element| element.odd? ? element + A.last : element } + A.slice(-1, 1)

'--------------'

puts '8. Дан целочисленный массив. Преобразовать его, прибавив к нечетным числам первый элемент. Первый и последний элементы массива не изменять.'

A.slice(0, 1) + A.slice(1...-1).map { |element| element.odd? ? element + A.first : element } + A.slice(-1, 1)
'--------------'

puts '9. Дан целочисленный массив. Заменить все положительные элементы на значение минимального.'

A.map { |element| element.positive? ? A.min : element }
'--------------'
puts '10.Дан целочисленный массив. Заменить все положительные элементы на значение максимального.'

A.map { |element| element.positive? ? A.max : element }

'--------------'
puts '11. Дан целочисленный массив. Заменить все отрицательные элементы на значение минимального.	'

A.map { |element| element.negative? ? A.min : element }

'--------------'
puts '12.Дан целочисленный массив. Заменить все отрицательные элементы на значение максимального.'

A.map { |element| element.negative? ? A.max : element }

'--------------'
puts '13. Дан целочисленный массив. Осуществить циклический сдвиг элементов массива влево на одну позицию.	'

A.rotate

'--------------'
puts '14. Дан целочисленный массив. Осуществить циклический сдвиг элементов массива вправо на одну позицию.'

A.rotate(-1)

puts '17Дан целочисленный массив. Найти количество его локальных максимумов.. '

A.each_index.select { |index| A[index] > A[index - 1] && A[index] > A[index + 1] }.size

'--------------'

puts '18. Дан целочисленный массив. Найти количество его локальных минимумов. '

A.each_index.select { |index| A[index - 1] && A[index] < A[index - 1] && A[index + 1] && A[index] < A[index + 1] }.size

'--------------'

puts '19. Дан целочисленный массив. Найти максимальный из его локальных максимумов.	'

A.select { |element| element > A[A.index(element) - 1] && element > A[A.index(element) + 1] }.max

'--------------'

puts '20. Дан целочисленный массив. Найти минимальный из его локальных минимумов.	'

A.select do |element|
  A[A.index(element) - 1] && element < A[A.index(element) - 1] && A[A.index(element) + 1] && element < A[A.index(element) + 1]
end.min

'--------------'

puts '25.  ан целочисленный массив. Преобразовать его, вставив перед каждым положительным элементом нулевой элемент.	'

A.map { |element| element.positive? ? [A[0], element] : element }.flatten!

'--------------'

puts '26.  Дан целочисленный массив. Преобразовать его, вставив перед каждым отрицательным элементом нулевой элемент.'

A.map { |element| element.negative? ? [A[0], element] : element }.flatten!

'--------------'

puts '27.  Дан целочисленный массив. Преобразовать его, вставив после каждого положительного элемента нулевой элемент.'

A.map { |element| element.positive? ? [element, A[0]] : element }.flatten!

'--------------'

puts '28.  Дан целочисленный массив. Преобразовать его, вставив после каждого отрицательного элемента нулевой элемент.'

A.map { |element| element.negative? ? [element, A[0]] : element }.flatten!

'--------------'

puts '29.  Дан целочисленный массив. Упорядочить его по возрастанию.'

A.sort

'--------------'

puts '30. Дан целочисленный массив. Упорядочить его по убыванию. '

A.sort { |a, b| b <=> a }

'--------------'

puts '31. Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют убывающую последовательность. '

A.sort.reverse.map { |element| A.index(element) }

'--------------'

puts '32.  Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют возрастающую последовательность.'

A.sort.map { |element| A.index(element) }

'--------------'
puts '33 Дан целочисленный массив. Найти индекс минимального элемента..'

A.index(A.min)

'--------------'

puts '34. Дан целочисленный массив. Найти индекс максимального элемента.	'

A.index(A.max)

'--------------'

puts '35. Дан целочисленный массив. Найти индекс первого минимального элемента. '

A.index(A.min)

'--------------'

puts '36. Дан целочисленный массив. Найти индекс первого максимального элемента.'

A.index(A.max)

'--------------'

puts '37.  Дан целочисленный массив. Найти индекс последнего минимального элемента.'

A.rindex(A.min)

'--------------'

puts '38.  Дан целочисленный массив. Найти индекс последнего максимального элемента.'

A.rindex(A.max)

'--------------'

puts '39.  Дан целочисленный массив. Найти количество минимальных элементов.'

A.count(A.min)

'--------------'

puts '40.  Дан целочисленный массив. Найти количество максимальных элементов.'

A.count(A.max)

'--------------'

puts '41.  Дан целочисленный массив. Найти минимальный четный элемент.'

A.select(&:even?).min

'--------------'

puts '42.  Дан целочисленный массив. Найти минимальный нечетный элемент.'

A.select(&:odd?).min

'--------------'

puts '43. Дан целочисленный массив. Найти максимальный четный элемент. '

A.select(&:even?).max

'--------------'
puts '44.  Дан целочисленный массив. Найти максимальный нечетный элемент.'

A.select(&:odd?).max

'--------------'

puts '45.  Дан целочисленный массив. Найти минимальный положительный элемент.'

A.select(&:positive?).min

'--------------'

puts '46.  Дан целочисленный массив. Найти максимальный отрицательный элемент.'

A.select(&:negative?).max

'--------------'

puts '47.  Дан целочисленный массив и интервал a..b. Найти минимальный из элементов в этом интервале.'

A.select { |element| (A[a..b]).include?(element) }.min

'--------------'

puts '48.  Дан целочисленный массив и интервал a..b. Найти максимальный из элементов в этом интервале.'

A.select { |element| (A[a..b]).include?(element) }.max

'--------------'

puts '49. Дан целочисленный массив. Найти количество элементов, расположенных перед первым минимальным. '

A[0...A.index(A.min)].size

'--------------'

puts '50.  Дан целочисленный массив. Найти количество элементов, расположенных перед первым максимальным.	'

A[0...A.index(A.max)].size

'--------------'

puts '51. Дан целочисленный массив. Найти количество элементов, расположенных после первого максимального. '

A[A.index(A.max)...-1].size

'--------------'

puts '52. Дан целочисленный массив. Найти количество элементов, расположенных после первого минимального . '

A[A.index(A.min)...-1].size

'--------------'

puts '53.  Дан целочисленный массив. Найти количество элементов, расположенных перед последним максимальным'

A[0...A.rindex(A.max)].size

'--------------'

puts '54. Дан целочисленный массив. Найти количество элементов, расположенных перед последним минимальным. '

A[0...A.rindex(A.min)].size

'--------------'

puts '55. Дан целочисленный массив. Найти количество элементов, расположенных после последнего максимального. '

A[A.rindex(A.max)...-1].size

'--------------'

puts '56. Дан целочисленный массив. Найти количество элементов, расположенных после последнего минимального . '

A[A.rindex(A.min)...-1].size

'--------------'

puts '57.  Дан целочисленный массив. Найти индекс первого экстремального (то есть минимального или максимального) элемента.'

A.index(A.min || A.max)

'--------------'

puts '58.  Дан целочисленный массив. Найти индекс последнего экстремального (то есть минимального или максимального) элемента.	'

A.rindex(A.min || A.max)

'--------------'

puts '59. Дан целочисленный массив. Найти количество элементов, между первым и последним минимальным.'

A[A.index(A.min)...A.rindex(A.min) - 1].size

'--------------'

puts '60. Дан целочисленный массив. Найти количество элементов, между первым и последним максимальным.'

A[A.index(A.max)...A.rindex(A.max) - 1].size

'--------------'

puts '61. Дан целочисленный массив. Найти два наибольших элемента.'

A.max(2)

'--------------'

puts '62. Дан целочисленный массив. Найти два наименьших элемента.'

A.min(2)

'--------------'
